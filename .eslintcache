[{"C:\\Users\\test\\Desktop\\Lambda Code\\Unit 2.b\\Sprint 3\\onboarding\\src\\index.js":"1","C:\\Users\\test\\Desktop\\Lambda Code\\Unit 2.b\\Sprint 3\\onboarding\\src\\App.js":"2","C:\\Users\\test\\Desktop\\Lambda Code\\Unit 2.b\\Sprint 3\\onboarding\\src\\reportWebVitals.js":"3","C:\\Users\\test\\Desktop\\Lambda Code\\Unit 2.b\\Sprint 3\\onboarding\\src\\components\\Form.js":"4","C:\\Users\\test\\Desktop\\Lambda Code\\Unit 2.b\\Sprint 3\\onboarding\\src\\components\\Inputs\\Input.js":"5","C:\\Users\\test\\Desktop\\Lambda Code\\Unit 2.b\\Sprint 3\\onboarding\\src\\components\\Inputs\\Checkbox.js":"6","C:\\Users\\test\\Desktop\\Lambda Code\\Unit 2.b\\Sprint 3\\onboarding\\src\\components\\DisplayCards\\Display.js":"7","C:\\Users\\test\\Desktop\\Lambda Code\\Unit 2.b\\Sprint 3\\onboarding\\src\\components\\DisplayCards\\Card.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":457,"mtime":1608151568087,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":4458,"mtime":1608226475804,"results":"13","hashOfConfig":"10"},{"size":579,"mtime":1608227878667,"results":"14","hashOfConfig":"10"},{"size":590,"mtime":1608226099754,"results":"15","hashOfConfig":"10"},{"size":475,"mtime":1608230183759,"results":"16","hashOfConfig":"10"},{"size":275,"mtime":1608222333299,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"tlyj2e",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\test\\Desktop\\Lambda Code\\Unit 2.b\\Sprint 3\\onboarding\\src\\index.js",[],["36","37"],"C:\\Users\\test\\Desktop\\Lambda Code\\Unit 2.b\\Sprint 3\\onboarding\\src\\App.js",[],"C:\\Users\\test\\Desktop\\Lambda Code\\Unit 2.b\\Sprint 3\\onboarding\\src\\reportWebVitals.js",[],"C:\\Users\\test\\Desktop\\Lambda Code\\Unit 2.b\\Sprint 3\\onboarding\\src\\components\\Form.js",["38"],"import React, { useState, useEffect } from \"react\";\r\nimport Input from \"./Inputs/Input\";\r\nimport Checkbox from \"./Inputs/Checkbox\";\r\nimport * as yup from \"yup\";\r\nimport axios from \"axios\";\r\n\r\nconst data = [\r\n  {\r\n    type: \"text\",\r\n    id: \"name\",\r\n    placeholder: \"test placeholder name\",\r\n  },\r\n  {\r\n    type: \"text\",\r\n    id: \"email\",\r\n    placeholder: \"test placeholder email\",\r\n  },\r\n  {\r\n    type: \"text\",\r\n    id: \"password\",\r\n    placeholder: \"test placeholder password\",\r\n  },\r\n  {\r\n    type: \"checkbox\",\r\n    id: \"checkbox\",\r\n    placeholder: \"test placeholder email\",\r\n  },\r\n];\r\nconst stateObj = {\r\n  name: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  checkbox: false,\r\n};\r\n\r\nconst Form = (props) => {\r\n  const [formState, setFormState] = useState(stateObj);\r\n  const [errors, setErrors] = useState({ ...stateObj, checkbox: \"\" });\r\n  const [btnAble, setBtnAble] = useState(true);\r\n\r\n  //!Review this\r\n  useEffect(() => {\r\n    formSchema.isValid(formState).then((valid) => {\r\n      console.log(valid);\r\n      setBtnAble(!valid);\r\n    });\r\n  }, [formState]);\r\n\r\n  const formSchema = yup.object().shape({\r\n    name: yup.string().required(\"req\"),\r\n    email: yup.string().email(\"That's no email!\").required(\"req\"),\r\n    password: yup.string().required(\"req\"),\r\n    checkbox: yup\r\n      .boolean()\r\n      .oneOf([true], \"must select to our demands\")\r\n      .required(\"req\"),\r\n  });\r\n\r\n  formSchema.isValid(formState);\r\n\r\n  //validate whether value meets schema\r\n  const validateChange = (e) => {\r\n    const type = e.target.type === \"checkbox\" ? \"checked\" : \"value\";\r\n    //reach allows us to check a specific value of the schema\r\n    yup\r\n      .reach(formSchema, e.target.name)\r\n      //The first thing you call when you've reached in is to validate, but... validate what? Give it something to validata\r\n      .validate(e.target[type])\r\n      //.then() signals that you are dealing with an asychonous function\r\n      .then((valid) => {\r\n        setErrors({ ...errors, [e.target.name]: \"\" });\r\n      })\r\n      //the errors that you get back is an object. to get the ERROR, you need to access the errors proprty on the returned objecr\r\n      .catch((err) => {\r\n        console.log(e.target.name);\r\n        setErrors({ ...errors, [e.target.name]: err.errors[0] });\r\n      });\r\n  };\r\n\r\n  const onChangeHandler = (e) => {\r\n    if (e.target.type !== \"checkbox\") {\r\n      setFormState({ ...formState, [e.target.id]: e.target.value });\r\n    } else {\r\n      setFormState({ ...formState, [e.target.id]: e.target.checked });\r\n    }\r\n    validateChange(e);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    axios\r\n      .post(\"https://reqres.in/api/users\", formState)\r\n      .then((res) => {\r\n        //add to state in App.js\r\n        console.log(res);\r\n        props.updateList([...props.state, res.data]);\r\n        //clear out state and reset input form here\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    setFormState(stateObj);\r\n    setBtnAble(true);\r\n  };\r\n\r\n  return (\r\n    //!ADD ON SUBMIT\r\n    <form onSubmit={submitHandler}>\r\n      {data.map((input, i) => {\r\n        if (input.type === \"text\") {\r\n          return (\r\n            <Input\r\n              key={i}\r\n              type={input.type}\r\n              id={input.id}\r\n              name={input.id}\r\n              placeholder={input.placeholder}\r\n              value={formState[input.id]}\r\n              changeHandler={onChangeHandler}\r\n              errorMessage={errors[input.id]}\r\n              className={input.id}\r\n            />\r\n          );\r\n        } else if (input.type === \"checkbox\") {\r\n          return (\r\n            <>\r\n              <Checkbox\r\n                key={i}\r\n                type={input.type}\r\n                id={input.id}\r\n                name={input.id}\r\n                className={input.id}\r\n                value={formState[input.id]}\r\n                checked={formState[input.checkbox]}\r\n                changeHandler={onChangeHandler}\r\n                errorMessage={errors[input.id]}\r\n              />\r\n            </>\r\n          );\r\n        } else {\r\n          throw new Error(\r\n            \"oopse from within Form.js. There is a piece of data that is not either 1) checkbox or 2) text\"\r\n          );\r\n        }\r\n      })}\r\n      {/* <button type='submit'>Submit now</button> */}\r\n      <button disabled={btnAble} className=\"btn\">\r\n        Submit now\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","C:\\Users\\test\\Desktop\\Lambda Code\\Unit 2.b\\Sprint 3\\onboarding\\src\\components\\Inputs\\Input.js",[],"C:\\Users\\test\\Desktop\\Lambda Code\\Unit 2.b\\Sprint 3\\onboarding\\src\\components\\Inputs\\Checkbox.js",[],"C:\\Users\\test\\Desktop\\Lambda Code\\Unit 2.b\\Sprint 3\\onboarding\\src\\components\\DisplayCards\\Display.js",[],"C:\\Users\\test\\Desktop\\Lambda Code\\Unit 2.b\\Sprint 3\\onboarding\\src\\components\\DisplayCards\\Card.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":47,"column":6,"nodeType":"45","endLine":47,"endColumn":17,"suggestions":"46"},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'formSchema'. Either include it or remove the dependency array.","ArrayExpression",["49"],"no-global-assign","no-unsafe-negation",{"desc":"50","fix":"51"},"Update the dependencies array to be: [formSchema, formState]",{"range":"52","text":"53"},[1048,1059],"[formSchema, formState]"]